name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '22.x'
  CI: true

jobs:
  # Frontend Testing & Build
  frontend-test:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install frontend dependencies
      run: npm ci
      
    - name: Run frontend tests
      run: npm test -- --watchAll=false --coverage --passWithNoTests
      
    - name: Build frontend
      run: npm run build
      
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

  # Backend Testing
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    env:
      DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
      NODE_ENV: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
          
    - name: Install backend dependencies
      run: |
        cd server
        npm ci
        
    - name: Run TypeScript type checking
      run: |
        cd server
        npm run type-check
        
    - name: Set up test database
      run: |
        cd server
        npm run db:generate
        npm run migrate
        
    - name: Run billable hours regression tests
      run: |
        cd server
        npm run test:billable-hours
        
    - name: Generate test coverage
      run: |
        cd server
        npm run test:coverage -- src/__tests__/billableHours
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./server/coverage/lcov.info
        directory: ./server/coverage/
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

  # Quality Checks
  quality-checks:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd server
        npm ci
        
    - name: Check for security vulnerabilities
      run: |
        cd server
        npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Generate test summary
      run: |
        cd server
        echo "## Test Summary ðŸ“Š" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Backend unit tests passing" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Frontend tests and build successful" >> $GITHUB_STEP_SUMMARY
        echo "âœ… TypeScript compilation successful" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Code quality checks completed" >> $GITHUB_STEP_SUMMARY