name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20.x'

jobs:
  # Backend Testing
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd server
        npm ci
        
    - name: Run TypeScript type checking
      run: |
        cd server
        npm run type-check
        
    - name: Run backend tests
      run: |
        cd server
        npm test
        
    - name: Generate test coverage
      run: |
        cd server
        npm run test:coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./server/coverage/lcov.info
        directory: ./server/coverage/
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

  # Frontend Testing & Build
  frontend-test:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: package-lock.json
        
    - name: Install frontend dependencies
      run: npm ci
      
    - name: Run TypeScript type checking
      run: npm run type-check || echo "Type checking not configured"
      continue-on-error: true
      
    - name: Run frontend tests
      run: npm test -- --coverage --watchAll=false
      continue-on-error: true
      
    - name: Build frontend
      run: npm run build
      
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

  # Quality Checks
  quality-checks:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: [backend-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
        
    - name: Install dependencies
      run: |
        cd server
        npm ci
        
    - name: Check for security vulnerabilities
      run: |
        cd server
        npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Generate test summary
      run: |
        cd server
        echo "## Test Summary ðŸ“Š" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Backend unit tests passing" >> $GITHUB_STEP_SUMMARY
        echo "âœ… TypeScript compilation successful" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Code quality checks completed" >> $GITHUB_STEP_SUMMARY