version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: blossom-postgres
    environment:
      POSTGRES_DB: blossom_and_bough
      POSTGRES_USER: blossom_user
      POSTGRES_PASSWORD: blossom_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blossom_user -d blossom_and_bough"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blossom-network

  # Backend API Server
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: blossom-backend
    env_file:
      - .env
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://blossom_user:blossom_password@postgres:5432/blossom_and_bough
      GOOGLE_OAUTH_CALLBACK_URL: http://localhost:3001/api/auth/google/callback
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      # Mount entire server directory for live development
      - ./server:/app/server
      # Mount package.json files specifically to detect changes
      - ./server/package.json:/app/server/package.json
      - ./server/package-lock.json:/app/server/package-lock.json
      # Anonymous volume for node_modules - container version takes precedence
      - backend_node_modules:/app/server/node_modules
      - ./google-account-key.json:/app/google-account-key.json:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blossom-network
    # Override command to watch for package.json changes
    command: >
      sh -c "
        # Function to install dependencies if package.json changed
        install_deps() {
          if [ /app/server/package.json -nt /app/server/node_modules/.last-install ]; then
            echo 'Package.json changed, installing dependencies...'
            npm ci
            touch /app/server/node_modules/.last-install
          fi
        }
        
        # Install deps on startup
        install_deps
        
        # Start development server
        npm run dev
      "

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: blossom-frontend
    environment:
      PORT: 3000
      PROXY_TARGET: http://backend:3001
      # Enable package.json watching
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for live development
      - ./src:/app/src
      - ./public:/app/public
      # Mount package.json files specifically
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      # Anonymous volume for node_modules - container version takes precedence
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - blossom-network
    # Override command to watch for package.json changes
    command: >
      sh -c "
        # Function to install dependencies if package.json changed
        install_deps() {
          if [ /app/package.json -nt /app/node_modules/.last-install ]; then
            echo 'Package.json changed, installing dependencies...'
            npm ci
            touch /app/node_modules/.last-install
          fi
        }
        
        # Install deps on startup
        install_deps
        
        # Start development server
        npm start
      "

volumes:
  postgres_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  blossom-network:
    driver: bridge
